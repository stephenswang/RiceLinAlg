<problem display_name="Sine Function" linenum="187" tex_filename="./block4/leastsquares.tex" showanswer="finished" attempts="5" rerandomize="per_student">
  <text>
    <p>
We wish to find the function of the form [mathjaxinline]y = a + b\sin x[/mathjaxinline] that is the least-squares fit for the data points [mathjaxinline](0,3), (\frac{\pi }{2},1), (\pi , 5), (\frac{3\pi }{2},6),(2\pi , 2).[/mathjaxinline] </p>
    <p>
This is equivalent to finding the least-squares solution to a matrix-vector equation [mathjaxinline]A\left[ \begin{array}{c} a \\ b\end{array} \right] = v.[/mathjaxinline] </p>
    <p>
What is [mathjaxinline]A[/mathjaxinline]? (Make sure your rows are in order, corresponding to the order of the given data points.) </p>
    <p>
      <div class="hideshowbox">
        <h4 onclick="hideshow(this);" style="margin: 0px">How to Enter a Matrix<span class="icon-caret-down toggleimage"/></h4>
        <div class="hideshowcontent">
          <p>
To enter the matrix [mathjaxinline]\left[ \begin{array}{ccc} 0&amp; 1&amp; 2 \\ 1&amp; 2&amp; 3 \end{array} \right][/mathjaxinline], type [[0,1,2],[1,2,3]]. (Type the same thing if you want to enter the augmented matrix [mathjaxinline]\left[ \begin{array}{cc:c} 0&amp; 1&amp; 2 \\ 1&amp; 2&amp; 3 \end{array} \right][/mathjaxinline].) </p>
          <p>
Use decimals only. </p>
        </div>
        <p class="hideshowbottom" onclick="hideshow(this);" style="margin: 0px">
          <a href="javascript: {return false;}">Show</a>
        </p>
      </div>
    </p>
    <script linenum="1" filename="./matrixentry2.tex" type="text/python" system_path="python_lib">
def MatrixEntry(expect, ans):
  	import ast
	import numpy as np 
	ret= {'ok':False}
  	atol = 0.01
  	try:
		list_ans = ast.literal_eval(ans)
		list_expect = ast.literal_eval(expect)
  		matrix_ans = np.matrix(list_ans)
  		matrix_expect = np.matrix(list_expect) 
  		if matrix_ans.shape != matrix_expect.shape:
  			ret['msg'] = 'Wrong shape of matrix'
  		elif np.allclose(matrix_ans, matrix_expect,0.01,1e-08):
  			ret['ok'] = True
  		else:
  			ret['msg'] = 'Something is wrong'
	except SyntaxError:
		ret['msg'] = 'Wrong input format'
  	return ret
</script>
    <p>
      <customresponse cfn="MatrixEntry" expect="[[1,0],[1,1],[1,0],[1,-1],[1,0]]">
        <textline correct_answer="[[1,0],[1,1],[1,0],[1,-1],[1,0]]"/>
      </customresponse>
    </p>
    <p>
What is [mathjaxinline]v[/mathjaxinline]? </p>
    <p>
      <div class="hideshowbox">
        <h4 onclick="hideshow(this);" style="margin: 0px">How to Enter a Column Vector in R^n<span class="icon-caret-down toggleimage"/></h4>
        <div class="hideshowcontent">
          <p>
To enter a vector in [mathjaxinline]\mathbb R^ n[/mathjaxinline] such as [mathjaxinline]\left[\begin{array}{c} 1 \\ 2 \\ 3 \end{array} \right][/mathjaxinline], you can either: </p>
          <ul class="itemize">
            <li>
              <p>
enter it as you would a [mathjaxinline]3\times 1[/mathjaxinline] matrix: [[1],[2],[3]] </p>
            </li>
            <li>
              <p>
or, you can enter it as &lt;1,2,3&gt; </p>
            </li>
          </ul>
          <p>
Use decimals only. </p>
        </div>
        <p class="hideshowbottom" onclick="hideshow(this);" style="margin: 0px">
          <a href="javascript: {return false;}">Show</a>
        </p>
      </div>
    </p>
    <script linenum="2" filename="./vectorentry2.tex" type="text/python" system_path="python_lib">
def VectorEntry(expect, ans):
	import ast
	import numpy as np 
  	atol = 0.01
	list_expect = ast.literal_eval(expect)
	vec_expect = np.matrix(list_expect)
  	ret = {"ok":False}
	try:
  		# input format [[1],[2],[3]]
		list_ans = ast.literal_eval(ans)
		vec_ans = np.matrix(list_ans)
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,atol,1e-08):
  			ret['ok'] = True
  		else:
  		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong'   			
	#except SyntaxError:
		#ret['msg'] = 'Wrong input format'
	except SyntaxError:
  		# input format &amp;lt;1,2,3&amp;gt;
		list_ans = ans.replace('&amp;lt;', '[').replace('&amp;gt;', ']')
		list_ans = ast.literal_eval(list_ans)
		vec_ans = np.transpose(np.matrix(list_ans))
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,0.01,1e-08):
  			ret['ok'] = True
  		else:
    		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong' 
  	except:
  		ret['msg'] = 'Wrong input format'
  	return ret 
</script>
    <p>
      <customresponse cfn="VectorEntry" expect="[[3],[1],[5],[6],[2]]">
        <textline correct_answer="[[3],[1],[5],[6],[2]]"/>
      </customresponse>
    </p>
    <p>
      <solution>
        <font color="blue">Answer: </font>
        <font color="blue"/>
      </solution>
    </p>
  </text>
  <SCRIPT src="/static/latex2edx.js" type="text/javascript"/>
  <LINK href="/static/latex2edx.css" rel="stylesheet" type="text/css"/>
</problem>
